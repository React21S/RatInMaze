{"version":3,"sources":["components/Nav.js","components/Header.js","components/Footer.js","components/Home.js","components/About.js","RatComponents/Cell.js","img/Rat.png","img/Cheese.png","RatComponents/Path.js","components/RatMaze.js","components/Main.js","App.js","index.js"],"names":["Nav","activeClassName","to","exact","Header","Footer","className","href","target","rel","Date","getFullYear","Home","src","alt","About","pathname","useStyles1","makeStyles","paper","background","useStyles2","WhiteCell","Grid","item","Paper","elevation","Box","padding","height","width","RedCell","classes","GreenCell","Cell","props","N","Path","pathIdx","foundPath","createFoundPath","i","push","j","maze","k","currentPath","length","x","y","findColor","result","this","container","spacing","justifyContent","direction","style","Rat","justify","Cheese","React","Component","RatMaze","matrix","paths","idx","numPaths","index","path","generateMatrix","Math","floor","random","inMaze","visited","calculatePaths","mazeUtil","pop","getNumPaths","color","onClick","history","go","findPath","displayNumPaths","ReactDOM","render","document","getElementById","grids","solution","id","d","createElement","gap","appendChild","reSet","e","setState","handleClick","preventDefault","window","location","reload","console","log","Array","Main","component","App"],"mappings":"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","file":"static/js/main.0f0ab88a.chunk.js","sourcesContent":["import {NavLink} from 'react-router-dom';\n\nimport React from 'react';\n\nconst Nav = () => {\n    return (\n        <div>\n        \n          <ul>\n            <li><NavLink activeClassName=\"active\" to=\"/\" exact> Home </NavLink> </li>\n            <li><NavLink activeClassName=\"active\" to=\"/about\" exact> About RatinMaze </NavLink> </li>\n            <li><NavLink  activeClassName=\"active\" to=\"/ratmaze\"> RatMaze</NavLink> </li>\n          </ul>\n        </div>\n    );\n};\n\nexport default Nav;","import React from 'react';\n\nimport Nav from './Nav';\n\nconst Header = () => {\n    return (\n\n            <header>\n            <h1>Rat and Maze App</h1>\n            <Nav/>\n            </header>\n    );\n};\n\nexport default Header;","import React from 'react';\n\nconst Footer = ()=>{\n      return (\n        <div className=\"wrapper\">\n        <footer>\n        <div className=\"footerWrapper\">\n            \n            <div className=\"icons\">\n                <a href=\"https://www.linkedin.com/in/femi-adesola-oyinloye-106454145/\" target=\"_blank\" rel=\"noreferrer\" className=\"linkedin\">\n                        <i className=\"fab fa-linkedin fa-2x\"></i>\n                    </a>\n                    <a href=\"#1\" className=\"facebook\">\n                        <i className=\"fab fa-facebook fa-2x\"></i>\n                    </a>\n                    <a href=\"https://github.com/FemiAdesola\" target=\"_blank\" rel=\"noreferrer\" className=\"github\">\n                        <i className=\"fab fa-github fa-2x\"></i>\n                    </a>\n                </div>\n                <p>Femi Adesola &copy; {new Date().getFullYear()} </p>\n                </div>\n        </footer>\n    </div>\n    );\n  };\n\n export default Footer;","import React from 'react';\nconst Home = () => {\n    return (\n      <div className=\"home\">\n         <h1> Rat in a Maze</h1>\n            <img src=\"https://source.unsplash.com/bwt0XBiKaTc \" alt=\"maze\"/>\n      </div>\n    );\n  };\n  export default Home;","import React from 'react';\nimport {Link} from \"react-router-dom\";\n\nconst About = () => {\n    return (\n        <div className=\"about\">\n            <h1> Rat and Maze Origin</h1>\n            <h3>\n            The use of rodent mazes began in the laboratory of Dr. Edmund Sanford at Clark University in the 1890s. One of his graduate students, Linus Kline, was interested in studying what was then known as zoological psychology, akin to what we know today as comparative psychology. Animals had long been used as models for the study of human physiology, and Kline was inspired to use them as behavioral models by Darwin’s work in the mid-1800s. \n            <Link  to={{ pathname:\"https://conductscience.com/maze/historical-mazes/\"}}target=\"_blank\" ><small> Read more</small></Link>\n            </h3>\n        </div>\n    );\n};\n\nexport default About;","import React from 'react';\nimport { Grid, Paper, Box, makeStyles } from '@material-ui/core';\n\nconst styles1 = {\n    paper: {\n      background: \"#4CAF50\",\n    }\n};\n  \nconst styles2 = {\n    paper: {\n      background: \"#FF5757\",\n    }\n};\n\nconst useStyles1 = makeStyles(styles1);\nconst useStyles2 = makeStyles(styles2);\n\nfunction Cell(props) { \n    if(props.N === 0) {\n      return(<RedCell></RedCell>);      \n    }\n  \n    else if(props.N === 1) {\n      return(<GreenCell></GreenCell>)\n    }\n  \n    else {\n      return(<WhiteCell></WhiteCell>);\n    }      \n}\n  \nfunction WhiteCell() {\n  return (\n    <Grid item>\n    <Paper elevation={3}>\n      <Box padding={4} height={50} width = {50} >              \n                  \n      </Box>\n    </Paper> \n    </Grid>    \n    );\n}\n  \nfunction RedCell() {\n  const classes = useStyles2();\n      return (\n          <Grid item>\n          <Paper className={classes.paper} elevation={3}>\n            <Box padding={4} height={50} width = {50} >                       \n            </Box>\n          </Paper> \n          </Grid>    \n      );\n}\n  \nfunction GreenCell() {\n    const classes = useStyles1();\n        return (\n            <Grid item>\n            <Paper className={classes.paper} elevation={3}>\n              <Box padding={4} height={50} width = {50} >                       \n              </Box>\n            </Paper> \n            </Grid>    \n        );\n}\n\nexport default Cell;","export default __webpack_public_path__ + \"static/media/Rat.d067acd2.png\";","export default __webpack_public_path__ + \"static/media/Cheese.78b87dc2.png\";","import React from 'react';\nimport Rat from \"../img/Rat.png\";\nimport {Grid, Paper, Box} from \"@material-ui/core\"\nimport Cell from \"./Cell\"\nimport Cheese from \"../img/Cheese.png\"\n\nclass Path extends React.Component {\n    constructor(props){\n        super();\n    }\n    pathIdx =0;\n    foundPath=[];\n\n    createFoundPath=()=>{\n        for (let i=0; i<16; i++){\n            this.foundPath.push(0);\n        }\n\n        for(let j=0; j<16;j++){\n            if (this.props.maze[j]===0){\n                this.foundPath[j]=2;\n            }\n        }\n\n        for (let k=0; k < this.props.currentPath.length; k++){\n            let x = this.props.currentPath[k][0];\n            let y = this.props.currentPath[k][1];\n            this.foundPath[4 * x+y] = 1;\n        }\n    };\n\n    findColor = ()=>{\n        this.pathIdx += 1;\n        let result = this.foundPath[this.pathIdx];\n        if (result ===2){\n            result = 0;\n        }\n        else if (result === 0){\n            result =2;\n        }\n        if (this.pathIdx ===14){\n            this.pathIdx = 0\n        }\n        return result;\n    }\n  \n\n    render(){\n        this.createFoundPath();\n        return (<div className=\"ratInMaze\">\n          <span className=\"path\">\n            <br></br>\n            <div className=\"Border\">\n              <p>\n                <Grid container spacing={3} justifyContent =\"center\" direction=\"row\">\n                  <Grid item>\n                    <Paper style={{ background: \"#4CAF50\" }} elevation={3}>\n                      <Box padding={4} height={50} width={50}>\n                        <center>\n                          <img\n                            src={Rat}\n                            height={50}\n                            width={75}\n                            vertical-align=\"middle\"\n                          alt=\"Rat\"></img>\n                        </center>\n                      </Box>\n                    </Paper>\n                  </Grid>\n                  <Cell N={this.findColor()}></Cell>\n                  <Cell N={this.findColor()}></Cell>\n                  <Cell N={this.findColor()}></Cell>\n                </Grid>\n              </p>\n    \n              <p>\n                <Grid container spacing={3} justifyContent =\"center\" direction=\"row\">\n                  <Cell N={this.findColor()}></Cell>\n                  <Cell N={this.findColor()}></Cell>\n                  <Cell N={this.findColor()}></Cell>\n                  <Cell N={this.findColor()}></Cell>\n                </Grid>\n              </p>\n    \n              <p>\n                <Grid container spacing={3} justifyContent =\"center\" direction=\"row\">\n                  <Cell N={this.findColor()}></Cell>\n                  <Cell N={this.findColor()}></Cell>\n                  <Cell N={this.findColor()}></Cell>\n                  <Cell N={this.findColor()}></Cell>\n                </Grid>\n              </p>\n    \n              <p>\n                <Grid container spacing={3} justify=\"center\" direction=\"row\">\n                  <Cell N={this.findColor()}></Cell>\n                  <Cell N={this.findColor()}></Cell>\n                  <Cell N={this.findColor()}></Cell>\n                  <Grid item>\n                    <Paper style={{ background: \"#4CAF50\" }} elevation={3}>\n                      <Box padding={4} height={50} width={50}>\n                        <center>\n                        <img \n                                    src={Cheese} \n                                    height={50} \n                                    width={55} vertical-align=\"middle\" alt=\"Cheese\"/>\n                        </center>\n                      </Box>\n                    </Paper>\n                  </Grid>\n                </Grid>\n              </p>\n            </div>\n          </span>\n          </div>\n        );\n      }\n    }\n\nexport default Path;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Grid, Paper, Box} from \"@material-ui/core\";\nimport Cell from \"../RatComponents/Cell\"\nimport Rat from \"../img/Rat.png\";\nimport Cheese from \"../img/Cheese.png\"\nimport Path from \"../RatComponents/Path\";\nclass RatMaze extends React.Component {\n    matrix =[2];\n    paths =[];\n    idx =0;\n    numPaths = 0;\n    pathIdx = 0;\n   \n    index =()=>{\n        this.idx +=1;\n        return this.matrix[this.idx];\n    }\n   \n    findColor=(path)=>{\n        this.pathIdx += 1;\n        let result =path[this.pathIdx];\n        if (this.pathIdx ===14){\n            this.pathIdx=0\n        }\n        return result;\n    };\n\n    generateMatrix = ()=>{\n        for (let i=0; i < 14; i++){\n            let val = Math.floor(Math.random()* 4);\n            if(val===0){\n                this.matrix.push(0);\n            }else{\n                this.matrix.push(2);\n            }\n        }\n        this.matrix.push(2);\n    };\n\n    inMaze =(x,y,visited)=>{\n        let n = 4;\n        return (\n            x>= 0 && \n            y>=0 && \n            x<n && y<n && \n            this.matrix[x * n + y] > 0 &&\n            visited[x * n + y] === 0\n        );\n    }\n\n    calculatePaths = () =>{\n        let visited = [];\n        for (let i = 0; i <16; i++){\n            visited[i]=0;\n        }\n        this.mazeUtil(visited, 0, 0,[]);\n        return this.paths;\n    };\n\n    mazeUtil=(visited, x, y, currentPath)=>{\n        if(x === 3 && y === 3){\n            this.numPaths+=1;\n            this.paths.push([...currentPath]);\n            visited[15]=0;\n            return;\n        }\n\n        if (!this.inMaze(x,y, visited)){\n        return;\n        };\n\n        visited[4 * x + y] = 1;\n\n        currentPath.push([x + 1, y]);\n        this.mazeUtil(visited, x+1, y, currentPath);\n        currentPath.pop()\n\n        currentPath.push([x, y+1]);\n        this.mazeUtil(visited, x, y+1, currentPath);\n        currentPath.pop()\n\n        visited[4 * x + y] = 0;\n        return;\n    };\n    \n    getNumPaths = ()=>{\n        \n        return(<div>\n            <div style={{color:\"black\"}}>\n            <div className=\"top\">\n            <center>\n                    <div className=\"paths\">Total Paths = {this.numPaths}</div>{\" \"}\n                    <button className=\"top\" onClick={() => this.props.history.go(0)}\n                    >Go Back to Ratmaze</button>\n                </center>\n            </div>\n            </div>\n           \n             </div>\n        );\n    };\n\n    findPath=()=>{\n        const displayNumPaths= <this.getNumPaths></this.getNumPaths>;\n        ReactDOM.render(displayNumPaths, document.getElementById(\"root\"));\n        let grids = document.getElementById(\"root\");\n        for (let i=0; i<this.paths.length; i++){\n            const solution=(<Path currentPath={this.paths[i]} maze={this.matrix}></Path>);\n            const id = Math.random();\n            const d = document.createElement(\"span\");\n            d.id = id;\n            const gap = document.createElement(\"br\");\n            grids.appendChild(d);\n            grids.appendChild(gap);\n            ReactDOM.render(solution, document.getElementById(id));\n        };\n    };\n\n    reSet=(e)=>{\n        this.setState({numPaths:this.findPath=\"\"});\n    }\n   \n        handleClick = (e)=>{\n        e.preventDefault();\n        window.location.reload();\n        console.log(\"This link was clicked.\")\n    }\n\n    render() {\n        this.matrix = new Array();\n        this.matrix =[2];\n        this.generateMatrix();\n        this.calculatePaths();\n     return (\n     <div className=\"ratInMaze\"> \n        <div>\n        <center>\n          <h1>Rat in a Maze</h1>\n        </center>\n        <div className=\"Border\">\n        <Grid container spacing={2} justify=\"center\" className=\"Border\" direction=\"column\">\n          <div>\n          <Grid container spacing={3} justifyContent = \"center\" direction=\"row\">\n           \n           <Grid item>\n               <Paper elevation={3}>\n                 <Box padding={4} height={60} width={60}>\n                   <center>\n                                   <img \n                                   src={Rat} \n                                   height={50} \n                                   width={75} vertical-align=\"middle\" alt=\"rat\"></img>\n                               </center>\n                           </Box>\n                       </Paper>\n                       </Grid> \n                       <Cell N={this.index()}></Cell>\n                       <Cell N={this.index()}></Cell>\n                       <Cell N={this.index()}></Cell>\n                   </Grid>\n                   \n                   </div>\n\n               \n                   <div>\n                       <Grid container spacing={3} justify = \"center\"\n                       direction=\"row\">\n                           <Cell N={this.index()}></Cell>\n                           <Cell N={this.index()}></Cell>\n                           <Cell N={this.index()}></Cell>\n                           <Cell N={this.index()}></Cell>\n                       </Grid> \n                    </div>\n              \n               <div>\n               <Grid container spacing={3} justifyContent  = \"center\" direction=\"row\">\n                   <Cell N={this.index()}></Cell>\n                   <Cell N={this.index()}></Cell>\n                   <Cell N={this.index()}></Cell>\n                   <Cell N={this.index()}></Cell>\n               </Grid>\n               </div>\n               \n               <div>\n               <Grid container spacing={3} justifyContent = \"center\" direction=\"row\">\n                   <Cell N={this.index()}></Cell>\n                   <Cell N={this.index()}></Cell>\n                   <Cell N={this.index()}></Cell>\n                 \n                    <Grid item>\n                    <Paper elevation = {3}>\n                        <Box padding = {4} height={50} width={50}>\n                            <center>\n                            <img \n                                    src={Cheese} \n                                    height={50} \n                                    width={75} vertical-align=\"middle\" alt=\"Cheese\"/>\n                            </center>\n                        </Box>\n                    </Paper>\n                    \n                    </Grid>\n                    \n                </Grid> \n              \n                </div>\n               \n                <div>\n                \n    <center>\n        <button onClick={this.handleClick}>\n            <b>Generate new maze</b>\n        </button>\n        <button\n            onClick={this.findPath}>\n                <b> Find Paths </b>\n        </button>\n        <button\n        className=\"Button\"\n            onClick={this.reSet}>\n                <b> Reset </b>\n        </button>\n        <br></br>\n    </center>\n    </div>\n    </Grid>\n    </div>\n    </div>\n</div>\n\n        );\n}\n}\n\nexport default RatMaze;","import React from 'react';\nimport Home from \"./Home\";\nimport About from \"./About\";\nimport { Switch, Route} from 'react-router-dom';\nimport RatMaze from \"./RatMaze\";\n\nconst Main = () => {\n    return (\n    <Switch>\n        <Route exact path = \"/\" component={Home}/>\n        <Route  exact  path= \"/ratmaze\" component={RatMaze}/>\n        <Route exact path= \"/about\" component={About}/>\n    </Switch>    \n       \n    );\n};\n\nexport default Main;\n\n","import Header from './components/Header';\nimport Footer from './components/Footer';\nimport Main from './components/Main';\nimport {HashRouter} from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n     <HashRouter>\n        <Header/>\n        <Main/>\n        <Footer/>\n      </HashRouter>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport \"./style/App.css\"\nimport App from './App';\n\nReactDOM.render(<App/>, document.getElementById('root')\n);"],"sourceRoot":""}